<body>
    <%# INITIALISATION  %>
        <% operation = @execute %>
        <% operation = "#{@execute}  #{@niv}" if @niv %>
        <% operation = "#{@execute}  #{@niv} jour#{@jour}" if (@niv && @jour) %>
        <h1> <%= operation %></h1>
        <%= flash[:notice] = "" %>
        <% f_hor13 = "#{ENV["HOR13"]}" %>
        <% f_hor21 = "#{ENV["GOBIT_DATA"]}"%>
        <% derniere = derniereFiliereDuDir(listGobit($dirCedulables)) %>
        <% rem = [] %>



    <%# REMARQUES: BUTS DES OPÉRATIONS %>
        <% rem<<"INITIALISATION de la filière #{@fname} dans le répertoire [~/op/cedulables]" if @execute=="init" %>
        <% rem<<"CONTRAINTES-R (répartitions) du segment #{@segment} mis à la fin de [~/init/contraintesR.txt]" if @execute=="stats"%>
        <% rem<<"LISTE des METACLASSES placées à la fin de [~/init/segments.txt]" if @execute=="metas"%>
        <% rem<<"TERMINAL: Liste des principales variables du programme gobit4.rb (debug)" if @execute=="debug"%>
        <% rem<<"TERMINAL: Affiche les répartitions des metas [en traitement](rouge+vert): SANS ENREGISTREMENT" if @execute=="repartir"%> 
        <% rem<<"ENREGISTRE dans #{@segment}.ceds les cédulables des metas en traitement(rouge+vert)" if @execute=="go"%>
        <% rem<<"ADDITIONNE dans #{@segment}.ceds les cédulables des metas en traitement(rouge+vert)" if @execute=="go_add"%>
        <% rem<<"FORMER: [#{@niv}-2.cedul] " if @execute=="ceduler"%>
        <% rem<<"TROUVER les profs des segments: #{@niv[1,1]}00 " if @execute=="compact"%>
        <% rem<<"DIAGONALISATION par méthode génétique (meilleur chromosome = meilleur horaire)" if @execute=="diago"%>
        <% rem<<"TRIER la filière selon la variance (meilleure variance = plus petit nombre)" if @execute=="variance"%>
        <% rem<<"rem à faire" if @execute=="data"%>
        <% rem<<"rem à faire" if @execute=="horaire-a"%>
        <% rem<<"rem à faire" if @execute=="effacer"%>
        <% rem<<"rem à faire" if @execute=="reset_cedul"%>
    

    <% case @execute %>   
        <% when "vide" %> 
            <% rem << "Opération vide !" %> 
        <% when "parade" %> 
            <%= link_to parade, parade_path  %><br>
            <% rem << "Opération PARADE n'est pas fontionnelle !" %> 
            
        <% when "documents" %> 
            <%  $pid = fork do           %>
            <%       system "./email.sh" %>
            <%     end                   %>
            <h4><br><br><font color="red"><bold>
            <%= " OPERATION [ #{@execute} ] en cours (pid: #{$pid}).............." %>
            <br><br><font color="blue"><bold>
            <%= "BUT: " %><br>
            <%= "Produire les documents de VERIFICATION de la Parade"              %>
            </h4></font></bold>
            
            
        <% when "afficheFILE" %>
            <% nb_lignes = File.foreach(@fname).count.to_s %>     
            <style> textarea {font-family: "Courrier New", Courrier, monospace;}  </style>
            <label for="rem">  <%= @fname[30,@fname.length] %> </label>       
            <textarea class="form-control" rows="<%= nb_lignes %>" style="font-size:17px;" >
                <% file = File.open(@fname, "r:iso8859-1")%>    
                    <% while (ligne = file.gets) %>
                        <% ligne = ligne.strip   %>
                        <%= ligne[0,85]          %>
                    <% end %>
                <% file.close %>
            </textarea>
            
            
        <% when "matieresNiveau" %>
            <% unless @matieresEtat then %>
                <% @matieresEtat = {} %>
                <% obtenir_MatieresNiveau(@niv).sort.each do |m| %>
                    <% @matieresEtat[m] = "inactif" %>
                <% end %>
            <% end %>	
            <% (@matieresEtat[@matiere] == "actif" ?  @matieresEtat[@matiere] = "inactif" :  @matieresEtat[@matiere] = "actif") if @matiere %>	
            <% @matieresEtat.each do |m,etat|%>
                <% style = styleMatiereEtat(etat) if m %>
                <%= link_to m, action_path(:execute=>"matieresNiveau",:blocMC=>@blocMC,:niv=>@niv,:matieresEtat=>@matieresEtat,:matiere=>m),style: style %>
                <br>
            <% end %>
            <br><br>	
            <% style = styleMatiereEtat("boutonDiago") %>
            <%= link_to 'DIAGONALISER: '+@niv, action_path(:execute=>"diago",:blocMC=>@blocMC,:niv=>@niv,:matieresEtat=>@matieresEtat), style: style %>
                                                    
    
        <% when "diago" %> 
            <% $pid = fork do %>
                <% system "clear ; ./executer.sh 'diago' '#{@niv}' '' '' '' 'diago' '#{rem}'" %>
            <% end %>
                        
        <% when "fix_diago" %> 
            <% rem <<"--- Fixer l'horaire de #{$niv} dans [horaires.txt]\n" %>
            <% rem <<"--- COPIER l'horaire officiel dans hor13 \n" %>
            <% rem <<"--- MISE À JOUR  des info \n" %>
            <% niv = "S#{derniere[-8,1]}" %>

            <% system "./executer.sh 'fix_diago' '#{niv}' '' '' '' 'fix_diago' '#{rem}'" %>

        <% when "init","stats","segMetas","debug","priorites"  %>  
            <% metas = save_MetaclassesEnTraitement  %>
            <% reste,metas = metas.split(":: ")  %>
            <h4> <%= "#{metas}"  %> </h4>
            <% niveau = "" unless niveau  %>
            <% jour = "" unless jour  %>
            <% nb_sols = "" unless nb_sols  %>
            <% metas = metas.gsub(" ", ":") if @execute == "segMetas" %> 

            <% case @execute %>
                <%# Bouton INIT %>
                <% when "init" %> 
                    <% system "./executer.sh '#{@segment}' '-i' '#{@fname}' '' '' 'init' '#{rem}' " %>

                <%# Bouton UTILS %>
                <% when "stats" %>
                    <% system "./executer.sh '#{@segment}' '-s' '' '' '#{metas}' 'segment' '#{rem}' "  %>
                <% when "segMetas" %>
                    <% system "./executer.sh '#{@segment}' '-m' '#{metas}' '' '' 'segMetas' '#{rem}' " %>
                <% when "priorites" %>
                    <% init_PrioritesSegment(@segment) %>
                    <% rem <<"Les metas du segment #{@segment} ont initialisé leurs priorités." %>
                <% when "debug" %>
                    <% system "./executer.sh '#{@segment}' '-d' '' '' '#{metas}' 'segment' '#{rem}' " %>
                <% else %>
                    <% rem= "@execute = [#{@execute}] n'existe pas! " %>
            <% end %>

        <% when "repartir","go","go_add" %>    
                        <%# "cedul","ceduler","horaire","horaire-a","effacer","reset_cedul"  %>  
            <%# unless @execute == "go_add" then %>
                <% metas = save_MetaclassesEnTraitement  %>
                <% reste,metas = metas.split(":: ")  %>
                <h4> <%= "#{metas}"  %> </h4>
            <%# end %>
            <% niveau = "" unless niveau  %>
            <% jour = "" unless jour  %>
            <% nb_sols = "" unless nb_sols  %>

            <% $pid = fork do %>
                <%# Bouton UTILS %>
                    <% system "./executer.sh '#{@segment}' '-x' '' '' '#{metas}' 'repartir' '#{rem}' " if @execute=="repartir" %>

                <%# Boutons GO, REPRENDRE, GO+ %>
                    <% system "./executer.sh '#{@segment}' '-o' '' '' '#{metas}' 'segment' '#{rem}' " if @execute=="go" %>
                    <% system "./executer.sh '#{@segment}' '-oa' '' '' '#{metas}' 'segment' '#{rem}' " if @execute=="go_add" %>

                <%# Boutons VARIANCE, CEDUL, HORAIRE, HORAIRE-A EFFACER, RESET-CEDUL %>
                    <% system "./executer.sh '' 'cedul' '#{niveau}' '#{nb_sols}' '#{jour}' 'action' '#{rem}' " if @execute == "cedul" %>
                    <% system "./executer.sh '' 'ceduler' '#{niveau}' '#{nb_sols}' '#{jour}' 'action' '#{rem}' " if @execute == "ceduler" %>
                    <% system "./executer.sh '' 'horaire' '#{niveau}' '' '' 'action' '#{rem}' " if @execute == "horaire" %>
                    <% system "./executer.sh '' 'horaire' '#{niveau}' '-a' '' 'horaire-a' '#{rem}' " if @execute == "horaire-a" %>
                    <% system "./executer.sh '' 'effacer' '#{niveau}' '' '#{jour}' 'action' '#{rem}' " if @execute == "effacer" %>
                    <% system "./executer.sh '' 'reset_cedul' '#{niveau}' '' '' 'action' '#{rem}' " if @execute == "reset_cedul" %>
            <% end %>

        <% when "variance" %> 
            <% repFiliere,nbLignes,nomFiliere = filiere($dirCedulables)  %> 
            <% $pid = fork do %>
                <% system "./variance.sh"  %>
            <% end %>            
            
        <% when "fixJour" %> 
            <% horaireTemp = obtenirCedulablesHoraire                  %> 
            <% repFiliere,nbLignes,nomFiliere = filiere($dirCedulables)%> 
            <% $pid = fork do                                          %>
            <%       system "./fix-hor.sh #{horaireTemp}"              %>
            <%     end                                                 %>
            <h4><br><br><font color="red"><bold>
            <br><br><font color="blue">
            <%= rem << "--- FIXER: les CEDULABLES selon la 1re ligne de [#{nomFiliere}]        "%><br>
            <%= rem << "--- OBTENIR: [hor13/info/] selon 1re ligne de [#{nomFiliere}]           "%><br>
            <%= rem << "--- TRANSFERER: ces horaires au PAS (Planification Annee Scolaire [web])"%>
            <%= rem << "--- ETAT FINAL: [data/horaires.txt] selon 1re ligne [#{nomFiliere}]     "%>
            </h4></font></bold>
        
        
        <% when "info" %> 
            <h3>
            <% listGobitAlpha("info").each do |fileName| %>
            <%= link_to fileName[49,fileName.length], action_path(:execute => "afficheFILE", :blocMC => @blocMC, :fname => fileName) %><br>
            <% end %>
            </h3>


        <% when "infoHor" %>
        
            <% $pid = fork do  %>
                <% system "./infoHor.sh #{@transfert_PAS}"   %>
            <%end%>
            <% rem << "--- METTRE A JOUR LES INFO: [hor13/info/...] avec l'horaire fixe \n" %><br>
            <% rem << "--- TRANSFERER ces horaires dans le www.PAS (Planif. Annee Scolaire)" if @transfert_PAS %>


        <% when "infoCeds" %> 
            <% metas = obtenirCedulablesHoraire %> 
            <% repFiliere,nbLignes,nomFiliere = filiere($dirCedulables) %> 
                <% $pid = fork do  %>
                    <% system "./infoCeds.sh #{@transfert_PAS} '#{metas}' '' '' '#{@execute}' "  %>
                <% end %>
            <%= rem << "--- OBTENIR: les INFO [~/info/...] selon la 1re ligne de [#{nomFiliere}] \n" %>
            <%= rem << "--- ETAT FINAL: la filiere [data/horaires.txt] est remise au statut précédent (sans les cedulables)"%>

        <% when "infoHorTous" %> 
            <% repFiliere,nbLignes,nomFiliere = filiere($dirCedulables) %>

            <% f_info13 = "#{f_hor13}/info/info_HORAIRES_objets.txt" %>
            <% f_info21 = "#{f_hor21}/info/info_HORAIRES_objets.txt"%>

            <% File.delete(f_info13) if File.exist?(f_info13) %>
            <% File.delete(f_info21) if File.exist?(f_info21) %>

                <% f = File.open(derniere, "r:iso8859-1") %>
                    <% count = 0 %>    
                    <% while line = f.gets %>       
                        <% unless line.strip == nil || line.strip == "nil" then %>
                            <% variance, metas = line.split("\t") %> 
                            <% system "./infoCeds.sh #{@transfert_PAS} '#{metas}' '#{@objets}' '#{count += 1}' '#{@execute}' "  %>
                        <% end %>
                    <% end %>
                <% f.close %>
            <% FileUtils.cp(f_info13, f_info21) %>

            <%= rem << "--- OBTENIR: les horaires possibles de (#{@objets}) à partir des cédulables: [#{derniere}] \n" %>
            <%= rem << "--- ETAT FINAL: la filiere [data/horaires.txt] est remise au statut précédent (sans les cedulables)"%>

        
        <% when "infoRepsTous" %> 
            <% repFiliere,nbLignes,nomFiliere = filiere($dirCedulables) %>

            <% f_info13 = "#{f_hor13}/info/info_REPARTITIONS_objets.txt" %>
            <% f_info21 = "#{f_hor21}/info/info_REPARTITIONS_objets.txt"%>

            <% File.delete(f_info13) if File.exist?(f_info13) %>
            <% File.delete(f_info21) if File.exist?(f_info21) %>

                <% system "cd; cd hor13; cat #{derniere} | ruby #{f_hor13}/mapred/affiche_objet.rb #{@objets} > #{f_info13}"  %>

            <% FileUtils.cp(f_info13, f_info21) %>
            <%= rem << "--- OBTENIR: les RÉPARTITIONS possibles de (#{@objets}) à partir des cédulables: [#{derniere.last(8)}] \n" %>
            <%= rem << "--- ETAT FINAL: La filiere [data/horaires.txt] est remise au statut précédent (sans les cedulables)"%>
            <%= rem << "----------------la filiere [info_REPARTITIONS_objets.txt] est copiée dans [gobit/hor21/info/]"%>

        
        <% when "data" %>
            <% $pid = fork do            %>
                <% system "./data.sh"  %>
            <% end %>

            <% rem << "--- SOURCE: PAS (Planification Annee Scolaire) sur le Web \n"%>
            <% rem << "--- DESTINATION: [hor13/init/] (metaclasses, classes, metas, profs, locaux) \n\n"%>
            <% rem << "--- REMARQUE: VOIR le transfert directement a l'ecran du terminal rails"        %>


        <% when "deselect" #ne fonctionne pas avec action.html.erb mais deSelect.html.erb %> 
        <% when "fixCeds" %> 
            <% horaireTemp = obtenirCedulablesHoraire                    %> 
            <% repFiliere,nbLignes,nomFiliere = filiere($dirCedulables)  %> 

            <% system "./fixCeds.sh '#{horaireTemp}' '#{nomFiliere}' '#{@niv}'"  %>

            <% rem << "--- FORMER: la filiere  [confection/horaire.rb]\n" %>
            <% rem << "--- OBTENIR: les metaclasses selon 1re ligne de [#{nomFiliere}]\n\n" %>
            <% rem << "--- ETAT FINAL: [confection/horaire.rb] aux repartitions du dernier cedulables        "%>
            
        <% when "ceduler" %>
            <form id="paramsCeduler"  method="get">
                <h3>ENREGISTREMENT dans [/op/sols/]<br>
                ___Oui : <input type="radio" name="actif" value="ceduler" checked >
                ___Non : <input type="radio" name="actif" value="cedul" ><br><br>

                JOURS
                    <% %w[A B C D E F G H ].each do  |jour| %>
                        <label><%="--> jour#{jour}- "%>
                            <input type="radio" name="jour" id=<%="#{jour}"%> value=<%="#{jour}"%> >
                        </label>
                    <% end %> 
                    --> TOUS <input type="radio" name="jour" id="jour" value="" checked ><br>

                <label>Maximum de solutions <input type="number" id="maxSols" name="maxSols" min="1" max="10000" value="5"></label><br>

                <input type="button" onclick=pageWeb("soumisCeduler") value="VALIDER"><br>
            </form>                

        <% when "soumisCeduler" %>

            <% $pid = fork do %>
                <% system "./executer.sh '#{@actif}' '#{@niv}' '#{@maxSols}' '#{@jour}' '' 'ceduler' '#{rem}' " %> 
            <% end %>
                    
        <% when "viableCompact" %> 
            <h3> <%= "PROGRAMME EN CONSTRUCTION" %> </h3>
        <% when "compact" %> 
            <% profsFinTache, profsViables = obtenirListeProfsFinTache_ProfsViables(@niv)  %>
            <%# profsFinTache3, profsViables3 = obtenirListeProfsFinTache_ProfsViables("S3")  %>
            <%# profsFinTache2, profsViables2 = obtenirListeProfsFinTache_ProfsViables("S2")  %>
            <% profsEPS = obtenirListeProfs(matieres = %w[EPS]) %>
            <% profsFinTache = profsFinTache.uniq - profsEPS %>
            <%# profsViables = (profsViables3 + profsViables2).uniq%>

            <% profsFinTache = "\"#{profsFinTache.join(" ").split.map(&:capitalize)}\"".gsub("\",","").gsub(" \""," ").gsub("\"[","").gsub("\"]","") %>   
            <% profsViables = "\"#{profsViables.join(", ").split.map(&:capitalize)} \"".gsub("\",",",").gsub(" \""," ").gsub("\"[","").gsub("\"]","")+"\"" %>    

            <%= "profsFinTache = #{profsFinTache}" %><br><br>    
            <%= "profsViables = #{profsViables}" %>

            <%# $pid = fork do %>
                <% system "cd ; cd hor13 ; run.sh '#{@niv}' '#{profsFinTache.strip}' '#{profsViables}' '#{rem}'" %>
            <%# end %>

        <% when "modifier_niv" %>

            <%# system "cat $GOBIT_DATA/data/hor_#{@niv}.txt | ruby $GOBIT/rbf/format_hor2reps.rb > $GOBIT_DATA/echange/#{@niv}-1.choix" %>
            <%# system "rm $GOBIT_DATA/echange/#{@niv}-2.cedul"  %>

            <% rem << "Mettre la répartition de l'horaire du niveau: #{@niv}" %>
            <% rem << "---dans la filière:    [#{@niv}-1.choix]" %>
            <% rem << "---effacer la filière: [#{@niv}-2.cedul]"%>
            <% rem << "---P.S. Le niveau #{@niv} est prêt à être cédulé, compacté et diagonalisé"%>
            
        <% when "stop" %>
            <%= "Process.kill('HUP', $pid)" %>
            <% Process.kill("HUP", $pid) %>
            <h4><br><br><font color="red"><bold>
            <%= " OPERATION [ #{@execute} ] en cours (pid: #{$pid}).............." %>
            <br>
                <% rem << "--- STOPPER le processus (pid: #{$pid}) "%>
            <br>
            </h4></font></bold>
        <% else  %> 
            <h3> <% rem << "Aucune des actions programmees ne correpond a votre demande" %> </h3>
    <% end %> 
  
    <!-- AFFICHAGE À L'ÉCRAN HORAIRE-JDLM: OPÉRATION - BUTS -->
        <% unless @execute == "ceduler" then %>
            <h2><font color="red"><bold><br>
                <%= " OPERATION [ #{@execute} ] " %></h2><br>
            <h4><font color="blue">
                <%= "BUT: " %><br><br>
                <% rem.each do |remarque| %>
                    <%= "----#{remarque}" %><br>
                <% end %>
            </h4></font></bold>
        <% end %>

    <% @blocMC = "index" unless @blocMC  %><br>
    <% unless @execute == "matieresNiveau" then %>
          <%= link_to "AFFICHER: #{@blocMC}",blocMetaclasses_path(:execute => @execute, :blocMC => @blocMC),class:"btn btn-info"%>
     <% end %>  
</body>